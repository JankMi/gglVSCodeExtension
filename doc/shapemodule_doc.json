[
	{
		"name": "makeShape",
		"description": "Erstellt ein Shape-Objekt.",
		"usages": [
			{
				"functionName": "makeShape",
				"call": ""
			}
		],
		"params": [
			{
				"name": "Kurze",
				"description": "Beschreibung"
			},
			{
				"name": "Elemente",
				"description": "kombinieren"
			}
		],
		"returnValue": "GGLObject<Shape>"
	},
	{
		"name": "shapeAddRect",
		"description": "Fügt das Rechteck rect zu dem Shape s hinzu.\\n",
		"usages": [
			{
				"functionName": "shapeAddRect",
				"call": "   Shape s ,  rect r   "
			}
		],
		"params": [
			{
				"name": "r",
				"description": "das hinzuzufügende Rechteck"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeAddEllipse",
		"description": "Fügt eine Ellipse zu dem Shape s hinzu.\\n",
		"usages": [
			{
				"functionName": "shapeAddEllipse",
				"call": "   Shape s ,  rect r   "
			}
		],
		"params": [
			{
				"name": "r",
				"description": "legt das Rechteck fest, innerhalb sich die Ellipse befinden soll"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeAddPolygon",
		"description": "Fügt das Polygon aus der Liste l zu dem Shape s hinzu.\\n",
		"usages": [
			{
				"functionName": "shapeAddPolygon",
				"call": "   Shape s ,  list[point] l   "
			}
		],
		"params": [
			{
				"name": "l",
				"description": "point()-Liste für das hinzuzufügende Polygon"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeAddShape",
		"description": "Fügt das Shape s1 zu dem Shape s2 hinzu.\\n",
		"usages": [
			{
				"functionName": "shapeAddShape",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "das hinzuzufügende Shape"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeTranslate",
		"description": "Verschiebt alle Elemente von target um Offset.",
		"usages": [
			{
				"functionName": "shapeTranslate",
				"call": "Shape target, point offset"
			}
		],
		"params": [
			{
				"name": "Shape",
				"description": "target"
			},
			{
				"name": "Shape",
				"description": "target"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeAddRoundedRect",
		"description": "Fügt das an den Ecken abgerundete Rechteck r zu dem Shape s hinzu.",
		"usages": [
			{
				"functionName": "shapeAddRoundedRect",
				"call": "   Shape s ,  rect r ,  number xRadius  ,  number yRadius   "
			}
		],
		"params": [
			{
				"name": "xRadius",
				"description": "legt den x-Radius der Ecken für das abgerundete Rechteck fest"
			},
			{
				"name": "yRadius",
				"description": "legt den y-Radius der Ecken für das abgerundete Rechteck fest"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeGetAngleAtPercent",
		"description": "liefert den Winkel an der Prozentzahl t im Shape s.",
		"usages": [
			{
				"functionName": "shapeGetAngleAtPercent",
				"call": "   Shape s ,  double t   "
			}
		],
		"params": [
			{
				"name": "t",
				"description": "legt die Prozentzahl zwischen 0 und 1 fest, zu der der entsprechende Winkel zu finden ist "
			}
		],
		"returnValue": "double"
	},
	{
		"name": "shapeGetSlopeAtPercent",
		"description": "liefert den Winkel an der Prozentzahl t im Shape s.",
		"usages": [
			{
				"functionName": "shapeGetSlopeAtPercent",
				"call": "   Shape s ,  double t   "
			}
		],
		"params": [
			{
				"name": "t",
				"description": "legt die Prozentzahl zwischen 0 und 1 fest, zu der der entsprechende Winkel zu finden ist "
			}
		],
		"returnValue": "double"
	},
	{
		"name": "shapeGetPointAtPercent",
		"description": "liefert den Punkt, der an der Prozentzahl t im Shape s liegt.",
		"usages": [
			{
				"functionName": "shapeGetPointAtPercent",
				"call": "   Shape s ,  double t   "
			}
		],
		"params": [
			{
				"name": "t",
				"description": "legt die Prozentzahl zwischen 0 und 1 fest, zu der der entsprechende Punkt zu finden ist "
			}
		]
	},
	{
		"name": "shapeArcMoveTo",
		"description": "legt im Shape s innerhalb des Rechtecks r den Startwinkel startAngle für das Zeichnen eines Bogens fest.",
		"usages": [
			{
				"functionName": "shapeArcMoveTo",
				"call": "   Shape s ,  rect r ,  number angle   "
			}
		],
		"params": [
			{
				"name": "r",
				"description": "legt das Rechteck fest, in dem der Startwinkel festzulegen ist"
			},
			{
				"name": "angle",
				"description": "legt den Startwinkel des Bogens fest"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeArcTo",
		"description": "Fügt einen Bogen im Shape s ein, der am Startwinkel startAngle und sich über sweepLength Grad",
		"usages": [
			{
				"functionName": "shapeArcTo",
				"call": "   Shape s ,  rect r ,  number startAngle  ,  number sweepLength   "
			}
		],
		"params": [
			{
				"name": "r",
				"description": "legt das Rechteck fest, in dem der Bogen zu zeichnen ist."
			},
			{
				"name": "startAngle",
				"description": "legt den Startwinkel des Bogens fest"
			},
			{
				"name": "sweepLength",
				"description": "legt als Endwinkel des Bogens die Summe aus startAngle + sweepLength fest"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeGetBoundingRect",
		"description": "Liefert das Rechteck, das den Shape s umfasst",
		"usages": [
			{
				"functionName": "shapeGetBoundingRect",
				"call": "   Shape s  "
			}
		],
		"params": [
			{
				"name": "Shape",
				"description": "s"
			}
		]
	},
	{
		"name": "shapeCloseSubpath",
		"description": "Liefert das Rechteck, das den Shape s umfasst",
		"usages": [
			{
				"functionName": "shapeCloseSubpath",
				"call": "   Shape s  "
			}
		],
		"params": [
			{
				"name": "Shape",
				"description": "s"
			}
		]
	},
	{
		"name": "shapeCubicTo",
		"description": "Fügt im Shape s eine kubische Bezier-Kurve zwischen der aktuellen Position und der Position endPoint",
		"usages": [
			{
				"functionName": "shapeCubicTo",
				"call": "   Shape s,  point c1  ,  point c2 ,  point endPoint   "
			}
		],
		"params": [
			{
				"name": "c1",
				"description": "Erster Kontrollpunkt für die kubische Bezier-Kurve"
			},
			{
				"name": "c2",
				"description": "Zweiter Kontrollpunkt für die kubische Bezier-Kurve"
			},
			{
				"name": "endPoint",
				"description": "Endpunkt der kubische Bezier-Kurve"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeQuadTo",
		"description": "Fügt im Shape s eine quadratische Bezier-Kurve zwischen der aktuellen Position und der Position endPoint",
		"usages": [
			{
				"functionName": "shapeQuadTo",
				"call": "   Shape s,  point c  ,  point endPoint   "
			}
		],
		"params": [
			{
				"name": "Shape",
				"description": "s"
			},
			{
				"name": "Shape",
				"description": "s"
			},
			{
				"name": "Shape",
				"description": "s"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeGetCurrentPosition",
		"description": "liefert die aktuelle Position für das Zeichnen im Shape s (z.B. nach shapeArcTo(), shapeCubicTo(), shapeQuadTo() und shapeLineTo())",
		"usages": [
			{
				"functionName": "shapeGetCurrentPosition",
				"call": "   Shape s  "
			}
		],
		"params": [
			{
				"name": "c",
				"description": "Kontrollpunkt für die quadratische Bezier-Kurve"
			},
			{
				"name": "endPoint",
				"description": "Endpunkt der quadratische Bezier-Kurve"
			}
		]
	},
	{
		"name": "shapeGetLength",
		"description": "liefert die die Länge des Pfads vom Shape s",
		"usages": [
			{
				"functionName": "shapeGetLength",
				"call": "   Shape s  "
			}
		],
		"params": [
			{
				"name": "Shape",
				"description": "s"
			}
		],
		"returnValue": "double"
	},
	{
		"name": "shapeLineTo",
		"description": "Zeichnet von der aktuellen Position (zu Beginn (0,0)) Linie zu dem Punkt p im Shape s.\\n",
		"usages": [
			{
				"functionName": "shapeLineTo",
				"call": "   Shape s ,  point p   "
			}
		],
		"params": [
			{
				"name": "p",
				"description": "Zielpunkt der zu zeichnenden Linie"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeMoveTo",
		"description": "verschiebt im Shape s den Startpunkt für das Zeichnen von shapeArcTo(), shapeCubicTo(), shapeQuadTo() und shapeLineTo() ",
		"usages": [
			{
				"functionName": "shapeMoveTo",
				"call": "   Shape s ,  point p   "
			}
		],
		"params": [
			{
				"name": "p",
				"description": "Neuer Startpunkt für das Zeichnen (wie z.B. zum Zeichnen einer Linie mit shapeLineTo()) im Shape s"
			}
		],
		"returnValue": "GGLObject::None"
	},
	{
		"name": "shapeIntersects",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeIntersects",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	},
	{
		"name": "shapeToReversed",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeToReversed",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	},
	{
		"name": "shapeClone",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeClone",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	},
	{
		"name": "shapeSetFillRule",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeSetFillRule",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	},
	{
		"name": "shapeSimplify",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeSimplify",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	},
	{
		"name": "shapeUnited",
		"description": "Liefert true, wenn Shape s1 eine Schnittmenge mit Shape s2</em besitzt, andernfalls false.\\n",
		"usages": [
			{
				"functionName": "shapeUnited",
				"call": "   Shape s1 ,  Shape s2   "
			}
		],
		"params": [
			{
				"name": "s2",
				"description": "Shape, das auf eine Schnittmenge mit Shape s2 zu prüfen ist"
			}
		],
		"returnValue": "bool"
	}
]