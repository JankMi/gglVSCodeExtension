{
	"For Loop": {
		"prefix": "for",
		"body": [
			"for (var ${1:index} = 0; ${1:index} < ${2:length}; ${1:index}++) {",
			"\t$0",
			"}"
		],
		"description": "For Loop"
	},
	"Function Statement": {
		"prefix": "function",
		"body": [
            "function ${1:name}(${2:params})",
            "{",
			"\t$0",
			"}"
		],
		"description": "Function Statement"
	},
	"If Statement": {
		"prefix": "if",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "If Statement"
	},
	"If-Else Statement": {
		"prefix": "ifelse",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"} else {",
			"\t",
			"}"
		],
		"description": "If-Else Statement"
	},
	"Switch Statement": {
		"prefix": "switch",
		"body": [
			"switch (${1:key}) {",
			"\tcase ${2:value}:$0",
			"}"
		],
		"description": "Switch Statement"
	},
	"While Statement": {
		"prefix": "while",
		"body": [
			"while (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "While Statement"
	},
	"Do-While Statement": {
		"prefix": "dowhile",
		"body": [
			"do {",
			"\t$0",
			"} while (${1:condition});"
		],
		"description": "Do-While Statement"
	},
	"Import local File.": {
		"prefix": "import",
		"body": [
			"import(\"ga://~@${1:file}.ggl\");"
		],
		"description": "Import local File."
    },
    "Local Path": {
        "prefix": "path",
        "body": [
            "\"ga://~@${1:file}.ggl\""
        ],
        "description": "Local Filepath String"
    },
    "Main Template": {
        "prefix": "template main",
        "body": [
            "import(\"ga://stdggl@main_frame.ggl\");",
            "import(\"ga://stdggl@wait_for_input.ggl\");",
            "import(\"ga://stdggl@depot.ggl\");",
            "import(\"ga://stdggl@selection_frame.ggl\");",
            "import(\"ga://common@userInputFunctions.ggl\");",
            "import(\"ga://common@five_dialog.ggl\");",
            "\nfunction init()",
            "{",
            "\tmain_frame_set_stop_arguments({\"Continue\": true, \"Restart\": true, \"Settings\": true, \"Exit\": true});",
            "\tinitMainFrame();",
            "\tmain_frame_enable_extra_stop();",
            "}",
            "\nfunction run()",
            "{",
            "\tuserNext();",
            "\t$0",
            "}"
        ],
        "description": "Template for new main.ggl"
    },
    "Navi Template": {
        "prefix": "template navi",
        "body": [
            "function navi_InitPlayerNavigation(var index, var setup, var matrix) {",
            "\tvar naviBestModes = [ \"Mouse\", \"Keyboard\", \"Gamepad\" ];",
            "\tvar naviEvents    = [item_clicked, gamepad_navi, key_event];",
            "\tvar naviStopKeys  = [ 1, 2, 3 ];",
            "\tvar naviIssues = {",
            "\t\t\"gamepad\": {",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false",
            "\t\t}",
            "\t\t\"5Buttons\": {",
            "\t\t\t\"1\"     : [\"right\", navigator_move_right ],",
            "\t\t\t\"2\"     : [\"down\",  navigator_move_down  ],",
            "\t\t\t\"3\"     : [\"ok\",    key_select           ],",
            "\t\t\t\"4\"     : [\"\",      none                 ],",
            "\t\t\t\"5\"     : [\"stop\",  main_frame_sim_stop  ],",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false,",
            "\t\t},",
            "\t\t\"4Buttons\": {",
            "\t\t\t\"1\"     : [\"right\", navigator_move_right ],",
            "\t\t\t\"2\"     : [\"down\",  navigator_move_down  ],",
            "\t\t\t\"3\"     : [\"ok\",    key_select           ],",
            "\t\t\t\"4\"     : [\"stop\",  main_frame_sim_stop  ],",
            "\t\t\t\"5\"     : [\"\",      none                 ],",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false",
            "\t\t},",
            "\t\t\"3Buttons\": {",
            "\t\t\t\"1\"     : [\"right\", navigator_move_right ],",
            "\t\t\t\"2\"     : [\"down\",  navigator_move_down  ],",
            "\t\t\t\"3\"     : [\"stop\",  key_select           ],",
            "\t\t\t\"4\"     : [\"\",      none                 ],",
            "\t\t\t\"5\"     : [\"\",      none                 ],",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false",
            "\t\t},",
            "\t\t\"2Buttons\": {",
            "\t\t\t\"1\"     : [\"right\", navigator_move_right ],",
            "\t\t\t\"2\"     : [\"ok\",    key_select           ],",
            "\t\t\t\"3\"     : [\"\",      none                 ],",
            "\t\t\t\"4\"     : [\"\",      none                 ],",
            "\t\t\t\"5\"     : [\"\",      none                 ],",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false",
            "\t\t}",
            "\t\t\"1Buttons\": {",
            "\t\t\t\"1\"     : [\"ok\", scanner_input ],",
            "\t\t\t\"2\"     : [\"\",   none          ],",
            "\t\t\t\"3\"     : [\"\",   none          ],",
            "\t\t\t\"4\"     : [\"\",   none          ],",
            "\t\t\t\"5\"     : [\"\",   none          ],",
            "\t\t\t\"move\"  : navigator_move_right,",
            "\t\t\t\"select\": matrix_selected,",
            "\t\t\t\"wrap0\" : false,",
            "\t\t\t\"skip0\" : false",
            "\t\t}",
            "\t};",
            "\tsetChangeModeFunction(setChangeKeyReturn);",
            "\tcallInitPlayerFunctions(index, setup, [matrix], naviBestModes, naviEvents, naviIssues, naviStopKeys);",
            "}",
            "\nfunction setChangeKeyReturn()",
            "{",
            "}",
            "\nfunction create_navi_matrix()",
            "{",
            "\tvar rows = 1;",
            "\tvar cols = 1;",
            "\tvar naviMatrix = naviMakeMatrix(rows, cols);",
            "\tnaviMatrix.naviSetItemChangedCallback(matrix_item_changed);",
            "\tnaviMatrix.naviSetExceededCallback(matrix_exceeded);",
            "\tnaviMatrix.naviSetSelectionCallback(matrix_selected);",
            "\treturn naviMatrix;",
            "}",
            "\nfunction item_clicked(var item)",
            "{",
            "\tg_naviMatrix.naviSelect();",
            "}",
            "\nfunction gamepad_navi(var button, var auto)",
            "{",
            "\tif (auto) return;",
            "\tswitch (button) {",
            "\t\tcase 0: g_naviMatrix.naviMoveLeft();  break;",
            "\t\tcase 1: g_naviMatrix.naviMoveUp();    break;",
            "\t\tcase 2: g_naviMatrix.naviMoveRight(); break;",
            "\t\tcase 3: g_naviMatrix.naviMoveDown();  break;",
            "\t\tcase 4: g_naviMatrix.naviSelect();    break;",
            "\t}",
            "}",
            "\nfunction key_event(var key)",
            "{",
            "\tvar userKeyCallbacks = getUserKeyCallbacks();",
            "\tif (key >= userKeyCallbacks.len()) return;",
            "\tif (userKeyCallbacks[key]) userKeyCallbacks[key]();",
            "}",
            "\nfunction key_select() ",
            "{",
            "\tg_naviMatrix.naviSelect();",
            "}",
            "\nfunction navigator_move_right()",
            "{",
            "\tg_naviMatrix.naviMoveRight();",
            "}",
            "\nfunction navigator_move_down()",
            "{",
            "\tg_naviMatrix.naviMoveDown();",
            "}",
            "\nfunction matrix_item_changed(var row, var col)",
            "{",
            "\tif (getCurrentMode() != \"Mouse\") {",
            "\t\tselection_frame_place_primary(g_naviMatrix.naviGetQObject(row,col));",
            "\t}",
            "}",
            "\nfunction matrix_selected(var row, var col)",
            "{",
            "}",
            "\nfunction matrix_exceeded(var row, var col)",
            "{",
            "}",
            "\nfunction scan_start(){}",
            "function scan_stop(){}"
        ],
        "description": "Template for new navi_functions.ggl"
    },
    "Dialog Template": {
        "prefix": "template dialog",
        "body": [
            "function showDialog()",
            "{",
            "\tvar ${1:dialogName} = userGetGameDialog(userCurrent(), gameGetId(), \"${1:dialogName}\");",
            "\tif (simGetArgument() == \"Restart\" && !userCurrent().userIsGuest()) {",
            "\t\tloadTempSettings();",
            "\t} else if (userHasAlwaysGameSettingsOption(userCurrent()) || simGetArgument() == \"Settings\") {",     
            "\t\tg_${1:dialogName} = get_${1:dialogName}(${1:dialogName})",
            "\t\tsaveTempSettings();",
            "\t\tif (userHasPermanentGameSettingsOption(userCurrent())) {",
            "\t\t\tuserSetGameDialog(userCurrent(), gameGetId(), {\"${1:dialogName}\" : g_${1:dialogName}});",	
            "\t\t}",
            "\t} else{",
            "\t\tg_${1:dialogName} = ${1:dialogName}[\"default\"];",
            "\t\ttsaveTempSettings();",
            "\t}",
            "\tg_${1:dialogName} = [${2:valueList}][g_${1:dialogName}];",
            "}",
            "\nfunction get_${1:dialogName}(var dict){",
            "\tvar options = list();",
            "\tfor (var i = 0; i < dict[\"nrOfAnswers\"]; i++) {",
            "\t\toptions.append( { \"path\": dict[\"Picture\" + str(i)], \"text\": dict[\"Answer\" + str(i)] } );",
            "\t}",
            "\tvar ${1:dialogName} = config_dialog(dict[\"question\"], options, dict[\"default\"]);",
            "\tif (${1:dialogName} == none) return none;",
            "\treturn ${1:dialogName};",
            "}",
            "\nfunction saveTempSettings()",
            "{",
            "\tif (!userCurrent().userIsGuest()) {",
            "\t\tvar path = userCreateArchivGUrl(\"tempSettings.json\", userCurrent(), \"tempSettings/\" + gameGetId());",
            "\t\tvar tempSettingsData = dict();",
            "\t\ttempSettingsData[\"${1:dialogName}\"] = g_${1:dialogName};",
            "\t\tioWriteFile(path, tempSettingsData);",
            "\t}",
            "}",
            "\nfunction loadTempSettings()",
            "{",
            "\tvar path = userCreateArchivGUrl(\"tempSettings.json\", userCurrent(), \"tempSettings/\" + gameGetId());",
            "\tvar tempSettingsData = ioReadFile(path);",
            "\tg_${1:dialogName} = tempSettingsData[\"${1:dialogName}\"];",
            "}"
        ],
        "description": "Template for new dialog.ggl"
    },
    "Init Template": {
		"prefix": "template init",
		"body": [
            "function init_background()",
            "{",
            "\tvar background = makePrimitive(MAINFRAME_LAYOUT[\"gamefield_square\"].getSize());",
            "\tbackground.gfxSetPos(MAINFRAME_LAYOUT[\"gamefield_square\"].getTopLeft());",
            "\tbackground.gfxSetBrush({\"color\": \"white\"});",
            "\treturn background;",
            "}",
            "\nfunction init_depot()",
            "{",
            "\tvar depot = makePrimitive(MAINFRAME_LAYOUT[\"resultfield\"].getSize());",
            "\tdepot.gfxSetPos(MAINFRAME_LAYOUT[\"resultfield\"].getTopLeft());",
            "\tdepot.gfxSetBrush({\"color\": \"white\"});",
            "\treturn depot;",
            "}"
		],
		"description": "Template for new init_functions.ggl"
	}
}